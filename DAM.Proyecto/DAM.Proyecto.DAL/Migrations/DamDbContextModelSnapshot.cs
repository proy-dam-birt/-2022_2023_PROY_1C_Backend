// <auto-generated />
using System;
using DAM.Proyecto.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAM.Proyecto.DAL.Migrations
{
    [DbContext(typeof(DamDbContext))]
    partial class DamDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.API.EventoEuskadi", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("EventsTableId")
                        .HasColumnType("int");

                    b.Property<string>("companyEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("descriptionEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descriptionEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("establishmentEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("establishmentEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipalityEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipalityEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipalityLatitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipalityLongitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipalityNoraCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("online")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("openingHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("openingHoursEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placeEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placeEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priceEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provinceNoraCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publicationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("purchaseUrlEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("purchaseUrlEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceNameEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceNameEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceUrlEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceUrlEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("urlEventEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlEventEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlNameEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlNameEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlOnline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlOnlineEu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("EventsTableId");

                    b.ToTable("EventoEuskadi");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.API.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("EventoEuskadiTableId")
                        .HasColumnType("bigint");

                    b.Property<string>("EventoEuskadiid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventoEuskadiTableId");

                    b.HasIndex("EventoEuskadiid");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.DB.EventoEuskadiTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CompanyEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstablishmentEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstablishmentEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityLatitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityLongitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNoraCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Online")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHoursEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceNoraCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseUrlEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseUrlEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceNameEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceNameEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceUrlEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceUrlEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlEventEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlEventEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlNameEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlNameEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlOnline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlOnlineEu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventosEuskadiTable");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.DB.EventsTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrentPage")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalItems")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalPages")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EventsTable");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.DB.ImagesTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ImageTable");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.DB.TipoActividadTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameEs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoActividadTable");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.DB.UserTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Consumidor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Servuctor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTable");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.API.EventoEuskadi", b =>
                {
                    b.HasOne("DAM.Proyecto.Domain.Entities.DB.EventsTable", null)
                        .WithMany("Items")
                        .HasForeignKey("EventsTableId");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.API.Image", b =>
                {
                    b.HasOne("DAM.Proyecto.Domain.Entities.DB.EventoEuskadiTable", null)
                        .WithMany("Images")
                        .HasForeignKey("EventoEuskadiTableId");

                    b.HasOne("DAM.Proyecto.Domain.Entities.API.EventoEuskadi", null)
                        .WithMany("images")
                        .HasForeignKey("EventoEuskadiid");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.API.EventoEuskadi", b =>
                {
                    b.Navigation("images");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.DB.EventoEuskadiTable", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("DAM.Proyecto.Domain.Entities.DB.EventsTable", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
